{"version":3,"sources":["component/customWhiteSpace/index.js","component/customWhiteSpace/index.less","view/personalCenter/suggestionFeedback/index.less","component/customImageUpload/index.js","view/personalCenter/suggestionFeedback/index.js"],"names":["__webpack_exports__","_ref","props","Object","E_mtzzh_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","_props$className","className","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","antd_mobile_lib_white_space__WEBPACK_IMPORTED_MODULE_1___default","assign","size","concat","styles","wrapper","module","exports","customImageUpload","onChange","fileList","type","index","_this$props","_this","files","maxLength","changeHandle","len","length","uploadRow","formData","FormData","append","file","request","url","api","fileUpload","data","config","baseURL","fileaddress","then","res","toConsumableArray","objectSpread","fileUrl","catch","err","fileDelete","_files","splice","react_default","image_picker_default","multiple","accept","this","Component","defaultProps","suggestionFeedback","state","imgList","saveFeedback","ffeedtext","map","item","fileName","toast_default","success","timer","setTimeout","clearTimeout","history","goBack","_this2","_this$state","list_default","textarea_item_default","rows","count","placeholder","renderHeader","Item","customImageUpload_customImageUpload","val","setState","selectable","customWhiteSpace","wing_blank_default","button_default","onClick","e"],"mappings":"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","file":"static/js/18.b9528ebc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { WhiteSpace } from 'antd-mobile';\r\nimport styles from './index.less';\r\n\r\nexport default ({ ...props }) => {\r\n    const { className = null } = props;\r\n    return <WhiteSpace size='lg' {...props} className={className ? `${styles.wrapper} ${className}` : styles.wrapper} />\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"index_wrapper__g-gQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"index_wrapper__3g0AU\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ImagePicker } from 'antd-mobile';\r\nimport { request } from '../../request';\r\nimport api from '../../request/api';\r\nimport { fileaddress } from '../../request/baseURL';\r\n\r\nexport default class customImageUpload extends Component {\r\n\r\n    static propTypes = {\r\n        maxLength: PropTypes.number,\r\n        changeHandle: PropTypes.func,\r\n    }\r\n\r\n    static defaultProps = {\r\n        maxLength: 10,\r\n        changeHandle: function () { }\r\n    }\r\n\r\n    onChange = (fileList, type, index) => {\r\n        let { files, maxLength, changeHandle } = this.props,\r\n            len = fileList.length;\r\n        if (len > maxLength) return\r\n        if (type === 'add') {\r\n            let uploadRow = fileList[len - 1], formData = new FormData();\r\n            formData.append('file', uploadRow.file)\r\n            request({\r\n                url: api.fileUpload, data: formData,\r\n                config: {\r\n                    baseURL: fileaddress\r\n                }\r\n            }).then(res => {\r\n                changeHandle([\r\n                    ...this.props.files, // 事件队列加闭包\r\n                    { ...res, url: uploadRow.url, fileUrl: res.url }\r\n                ])\r\n            }).catch(err => { })\r\n        }\r\n        if (type === 'remove')\r\n            request({\r\n                url: api.fileDelete, data: { url: files[index].fileUrl },\r\n                config: {\r\n                    baseURL: fileaddress\r\n                }\r\n            }).then(res => {\r\n                let _files = [...this.props.files];  // 事件队列加闭包\r\n                _files.splice(index, 1);\r\n                changeHandle(_files)\r\n            }).catch(err => { })\r\n    }\r\n    render() {\r\n        return <ImagePicker\r\n            multiple\r\n            accept=\"image/gif,image/jpeg,image/jpg,image/png\"\r\n            {...this.props}\r\n            onChange={this.onChange}\r\n        />\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import { createForm } from 'rc-form';\r\nimport { List, TextareaItem, Button, WingBlank, Toast } from 'antd-mobile';\r\nimport CustomWhiteSpace from '../../../component/customWhiteSpace';\r\nimport CustomImageUpload from '../../../component/customImageUpload';\r\nimport { request } from '../../../request';\r\nimport api from '../../../request/api';\r\nimport styles from './index.less';\r\n\r\nexport default class suggestionFeedback extends Component {\r\n    state = {\r\n        imgList: [],\r\n        maxLength: 10,\r\n    }\r\n\r\n    saveFeedback = () => {\r\n        request({\r\n            url: api.saveFeedback, data: { ffeedtext: '反馈一下反馈一下反馈一下反馈一下反馈一下反馈一下', imgList: this.state.imgList.map(item => item.fileName) }\r\n        }).then(res => {\r\n            Toast.success('提交成功!', 1)\r\n            let timer = setTimeout(() => {\r\n                clearTimeout(timer)\r\n                timer = null\r\n                this.props.history.goBack()\r\n            }, 1000)\r\n        }).catch(err => { })\r\n    }\r\n\r\n    render() {\r\n        const { imgList, maxLength } = this.state,\r\n            len = imgList.length;\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <List>\r\n                    <TextareaItem\r\n                        rows={5}\r\n                        count={100}\r\n                        placeholder='请输入反馈内容'\r\n                    />\r\n                </List>\r\n                <List renderHeader={() => <div className='titleFontSizeC'>拍照上传<span className='textFontSizeC shallowGreyColor'>{`（${len}/${maxLength}）`}</span></div>}>\r\n                    <List.Item>\r\n                        <CustomImageUpload\r\n                            maxLength={10}\r\n                            changeHandle={(val) => {\r\n                                this.setState({\r\n                                    imgList: val\r\n                                })\r\n                            }}\r\n                            selectable={len < maxLength}\r\n                            files={imgList}\r\n                        />\r\n                    </List.Item>\r\n                </List>\r\n                <CustomWhiteSpace />\r\n                <WingBlank><Button type='primary' onClick={e => {\r\n                    this.saveFeedback()\r\n                }}>提交</Button></WingBlank>\r\n            </div>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}