{"version":3,"sources":["view/personalCenter/message/index.js","view/personalCenter/message/index.less"],"names":["Detail","asyncC","__webpack_require__","e","then","bind","message","state","pageNo","pageSize","hasMore","dataBlobs","dataSource","antd_mobile_lib_list_view__WEBPACK_IMPORTED_MODULE_5___default","a","DataSource","rowHasChanged","row1","row2","isLoading","height","getMessages","_this$state","_this","setState","request","url","api","data","res","list","pageTurn","nextPage","rowCount","_dataBlobs","Object","E_mtzzh_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__","concat","length","cloneWithRows","catch","err","onEndReached","event","_this$state2","goToDetail","rowData","index","isRead","updateMessageRead","msgId","_this$state3","currentRow","E_mtzzh_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","splice","_this$props","props","history","match","push","pathname","path","hei","document","documentElement","clientHeight","ReactDOM","findDOMNode","this","lv","getBoundingClientRect","top","_this2","_this$state4","react__WEBPACK_IMPORTED_MODULE_11___default","createElement","className","ref","el","renderRow","item","sectionID","styles","message_time","formatDate","Date","msgDate","antd_mobile_lib_card__WEBPACK_IMPORTED_MODULE_1___default","full","message_content","Header","title","msgTitle","extra","message_content_noread","message_content_isread","Body","msgContent","Footer","message_content_view","onClick","style","onEndReachedThreshold","react_router__WEBPACK_IMPORTED_MODULE_13__","component","Component","module","exports"],"mappings":"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","file":"static/js/20.2c921047.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route } from 'react-router';\r\nimport { ListView, Card } from 'antd-mobile';\r\nimport asyncC from '../../../component/asyncC';\r\nimport { request } from '../../../request';\r\nimport api from '../../../request/api';\r\nimport { formatDate } from '../../../utlis';\r\nimport styles from './index.less';\r\nconst Detail = asyncC(() => import('./detail'));\r\n\r\nexport default class message extends Component {\r\n    state = {\r\n        pageNo: 1,\r\n        pageSize: 10,\r\n        hasMore: true,\r\n        dataBlobs: [],\r\n        dataSource: new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2\r\n        }),\r\n        isLoading: false,\r\n        height: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const hei = document.documentElement.clientHeight - ReactDOM.findDOMNode(this.lv).getBoundingClientRect().top;\r\n        this.setState({ height: hei })\r\n        this.getMessages()\r\n    }\r\n\r\n    getMessages = () => { // 获取消息列表\r\n        const { pageNo, pageSize, dataBlobs, dataSource } = this.state;\r\n        this.setState({ isLoading: true })\r\n        request({ url: api.getMessages, data: { pageNo, pageSize } }).then(res => {\r\n            const { list, pageTurn } = res,\r\n                { nextPage, rowCount } = pageTurn,\r\n                _dataBlobs = [...dataBlobs, ...list];\r\n            this.setState({\r\n                dataBlobs: _dataBlobs,\r\n                hasMore: _dataBlobs.length >= rowCount ? false : true,\r\n                pageNo: nextPage,\r\n                dataSource: dataSource.cloneWithRows(_dataBlobs),\r\n                isLoading: false\r\n            })\r\n        }).catch(err => { this.setState({ isLoading: false }) })\r\n    }\r\n\r\n    onEndReached = (event) => {\r\n        const { isLoading, hasMore } = this.state;\r\n        if (isLoading || !hasMore)\r\n            return;\r\n        this.getMessages()\r\n    }\r\n\r\n    goToDetail = (rowData, index) => {\r\n        if (rowData.isRead === '0') {\r\n            request({ url: api.updateMessageRead, data: { msgId: rowData.msgId } }).then(res => {\r\n                const { dataBlobs, dataSource } = this.state,\r\n                    _dataBlobs = [...dataBlobs],\r\n                    currentRow = { ..._dataBlobs[index] };\r\n                currentRow.isRead = '1';\r\n                _dataBlobs.splice(index, 1, currentRow)\r\n                this.setState({\r\n                    dataBlobs: _dataBlobs,\r\n                    dataSource: dataSource.cloneWithRows(_dataBlobs)\r\n                })\r\n            }).catch(err => { })\r\n        }\r\n        const { history, match } = this.props;\r\n        history.push({\r\n            pathname: match.path + '/detail',\r\n            state: rowData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { dataSource, height } = this.state,\r\n            { match } = this.props;\r\n        return (\r\n            <div className='bg_grey_list_view'>\r\n                <ListView\r\n                    ref={el => this.lv = el}\r\n                    dataSource={dataSource}\r\n                    renderRow={(item, sectionID, index) => <div>\r\n                        <div className={styles.message_time}>\r\n                            <span>{formatDate(new Date(item.msgDate))}</span>\r\n                        </div>\r\n                        <Card full className={styles.message_content}>\r\n                            <Card.Header\r\n                                title={<div className='oneRowsOverflowOmit'>{item.msgTitle}</div>}\r\n                                extra={<span className={item.isRead === '0' ? styles.message_content_noread : styles.message_content_isread} />}\r\n                            />\r\n                            <Card.Body>\r\n                                <p className='twoRowsOverflowOmit'>{item.msgContent}</p>\r\n                            </Card.Body>\r\n                            <Card.Footer extra={<div className={styles.message_content_view} onClick={this.goToDetail.bind(this, item, index)}>查看详情</div>} />\r\n                        </Card>\r\n                    </div>}\r\n                    style={{ height }}\r\n                    onEndReached={this.onEndReached}\r\n                    onEndReachedThreshold={30}\r\n                />\r\n                <Route path={match.path + '/detail'} component={Detail} />\r\n            </div>\r\n        );\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_time\":\"index_message_time__3OUfK\",\"message_content_noread\":\"index_message_content_noread__2hPND\",\"message_content_isread\":\"index_message_content_isread__2PJIa\",\"message_content_view\":\"index_message_content_view__1MLNy\"};"],"sourceRoot":""}